/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as uiComboboxImport } from './routes/(ui)/combobox'
import { Route as formFormImport } from './routes/(form)/form'
import { Route as authenticationAuthedImport } from './routes/(authentication)/_authed'
import { Route as authenticationAuthImport } from './routes/(authentication)/_auth'
import { Route as authenticationAuthedProtectedAdminImport } from './routes/(authentication)/_authed.protected-admin'
import { Route as authenticationAuthedProtectedImport } from './routes/(authentication)/_authed.protected'
import { Route as authenticationAuthSignUpImport } from './routes/(authentication)/_auth.sign-up'
import { Route as authenticationAuthSignInImport } from './routes/(authentication)/_auth.sign-in'

// Create Virtual Routes

const authenticationImport = createFileRoute('/(authentication)')()

// Create/Update Routes

const authenticationRoute = authenticationImport.update({
  id: '/(authentication)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const uiComboboxRoute = uiComboboxImport.update({
  id: '/(ui)/combobox',
  path: '/combobox',
  getParentRoute: () => rootRoute,
} as any)

const formFormRoute = formFormImport.update({
  id: '/(form)/form',
  path: '/form',
  getParentRoute: () => rootRoute,
} as any)

const authenticationAuthedRoute = authenticationAuthedImport.update({
  id: '/_authed',
  getParentRoute: () => authenticationRoute,
} as any)

const authenticationAuthRoute = authenticationAuthImport.update({
  id: '/_auth',
  getParentRoute: () => authenticationRoute,
} as any)

const authenticationAuthedProtectedAdminRoute =
  authenticationAuthedProtectedAdminImport.update({
    id: '/protected-admin',
    path: '/protected-admin',
    getParentRoute: () => authenticationAuthedRoute,
  } as any)

const authenticationAuthedProtectedRoute =
  authenticationAuthedProtectedImport.update({
    id: '/protected',
    path: '/protected',
    getParentRoute: () => authenticationAuthedRoute,
  } as any)

const authenticationAuthSignUpRoute = authenticationAuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authenticationAuthRoute,
} as any)

const authenticationAuthSignInRoute = authenticationAuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authenticationAuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)': {
      id: '/(authentication)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticationImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/_auth': {
      id: '/(authentication)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticationAuthImport
      parentRoute: typeof authenticationRoute
    }
    '/(authentication)/_authed': {
      id: '/(authentication)/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticationAuthedImport
      parentRoute: typeof authenticationImport
    }
    '/(form)/form': {
      id: '/(form)/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof formFormImport
      parentRoute: typeof rootRoute
    }
    '/(ui)/combobox': {
      id: '/(ui)/combobox'
      path: '/combobox'
      fullPath: '/combobox'
      preLoaderRoute: typeof uiComboboxImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/_auth/sign-in': {
      id: '/(authentication)/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authenticationAuthSignInImport
      parentRoute: typeof authenticationAuthImport
    }
    '/(authentication)/_auth/sign-up': {
      id: '/(authentication)/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authenticationAuthSignUpImport
      parentRoute: typeof authenticationAuthImport
    }
    '/(authentication)/_authed/protected': {
      id: '/(authentication)/_authed/protected'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof authenticationAuthedProtectedImport
      parentRoute: typeof authenticationAuthedImport
    }
    '/(authentication)/_authed/protected-admin': {
      id: '/(authentication)/_authed/protected-admin'
      path: '/protected-admin'
      fullPath: '/protected-admin'
      preLoaderRoute: typeof authenticationAuthedProtectedAdminImport
      parentRoute: typeof authenticationAuthedImport
    }
  }
}

// Create and export the route tree

interface authenticationAuthRouteChildren {
  authenticationAuthSignInRoute: typeof authenticationAuthSignInRoute
  authenticationAuthSignUpRoute: typeof authenticationAuthSignUpRoute
}

const authenticationAuthRouteChildren: authenticationAuthRouteChildren = {
  authenticationAuthSignInRoute: authenticationAuthSignInRoute,
  authenticationAuthSignUpRoute: authenticationAuthSignUpRoute,
}

const authenticationAuthRouteWithChildren =
  authenticationAuthRoute._addFileChildren(authenticationAuthRouteChildren)

interface authenticationAuthedRouteChildren {
  authenticationAuthedProtectedRoute: typeof authenticationAuthedProtectedRoute
  authenticationAuthedProtectedAdminRoute: typeof authenticationAuthedProtectedAdminRoute
}

const authenticationAuthedRouteChildren: authenticationAuthedRouteChildren = {
  authenticationAuthedProtectedRoute: authenticationAuthedProtectedRoute,
  authenticationAuthedProtectedAdminRoute:
    authenticationAuthedProtectedAdminRoute,
}

const authenticationAuthedRouteWithChildren =
  authenticationAuthedRoute._addFileChildren(authenticationAuthedRouteChildren)

interface authenticationRouteChildren {
  authenticationAuthRoute: typeof authenticationAuthRouteWithChildren
  authenticationAuthedRoute: typeof authenticationAuthedRouteWithChildren
}

const authenticationRouteChildren: authenticationRouteChildren = {
  authenticationAuthRoute: authenticationAuthRouteWithChildren,
  authenticationAuthedRoute: authenticationAuthedRouteWithChildren,
}

const authenticationRouteWithChildren = authenticationRoute._addFileChildren(
  authenticationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof authenticationAuthRouteWithChildren
  '': typeof authenticationAuthedRouteWithChildren
  '/form': typeof formFormRoute
  '/combobox': typeof uiComboboxRoute
  '/sign-in': typeof authenticationAuthSignInRoute
  '/sign-up': typeof authenticationAuthSignUpRoute
  '/protected': typeof authenticationAuthedProtectedRoute
  '/protected-admin': typeof authenticationAuthedProtectedAdminRoute
}

export interface FileRoutesByTo {
  '/': typeof authenticationAuthRouteWithChildren
  '': typeof authenticationAuthedRouteWithChildren
  '/form': typeof formFormRoute
  '/combobox': typeof uiComboboxRoute
  '/sign-in': typeof authenticationAuthSignInRoute
  '/sign-up': typeof authenticationAuthSignUpRoute
  '/protected': typeof authenticationAuthedProtectedRoute
  '/protected-admin': typeof authenticationAuthedProtectedAdminRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(authentication)': typeof authenticationRouteWithChildren
  '/(authentication)/_auth': typeof authenticationAuthRouteWithChildren
  '/(authentication)/_authed': typeof authenticationAuthedRouteWithChildren
  '/(form)/form': typeof formFormRoute
  '/(ui)/combobox': typeof uiComboboxRoute
  '/(authentication)/_auth/sign-in': typeof authenticationAuthSignInRoute
  '/(authentication)/_auth/sign-up': typeof authenticationAuthSignUpRoute
  '/(authentication)/_authed/protected': typeof authenticationAuthedProtectedRoute
  '/(authentication)/_authed/protected-admin': typeof authenticationAuthedProtectedAdminRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/form'
    | '/combobox'
    | '/sign-in'
    | '/sign-up'
    | '/protected'
    | '/protected-admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/form'
    | '/combobox'
    | '/sign-in'
    | '/sign-up'
    | '/protected'
    | '/protected-admin'
  id:
    | '__root__'
    | '/'
    | '/(authentication)'
    | '/(authentication)/_auth'
    | '/(authentication)/_authed'
    | '/(form)/form'
    | '/(ui)/combobox'
    | '/(authentication)/_auth/sign-in'
    | '/(authentication)/_auth/sign-up'
    | '/(authentication)/_authed/protected'
    | '/(authentication)/_authed/protected-admin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticationRoute: typeof authenticationRouteWithChildren
  formFormRoute: typeof formFormRoute
  uiComboboxRoute: typeof uiComboboxRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticationRoute: authenticationRouteWithChildren,
  formFormRoute: formFormRoute,
  uiComboboxRoute: uiComboboxRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(authentication)",
        "/(form)/form",
        "/(ui)/combobox"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(authentication)": {
      "filePath": "(authentication)",
      "children": [
        "/(authentication)/_auth",
        "/(authentication)/_authed"
      ]
    },
    "/(authentication)/_auth": {
      "filePath": "(authentication)/_auth.tsx",
      "parent": "/(authentication)",
      "children": [
        "/(authentication)/_auth/sign-in",
        "/(authentication)/_auth/sign-up"
      ]
    },
    "/(authentication)/_authed": {
      "filePath": "(authentication)/_authed.tsx",
      "parent": "/(authentication)",
      "children": [
        "/(authentication)/_authed/protected",
        "/(authentication)/_authed/protected-admin"
      ]
    },
    "/(form)/form": {
      "filePath": "(form)/form.tsx"
    },
    "/(ui)/combobox": {
      "filePath": "(ui)/combobox.tsx"
    },
    "/(authentication)/_auth/sign-in": {
      "filePath": "(authentication)/_auth.sign-in.tsx",
      "parent": "/(authentication)/_auth"
    },
    "/(authentication)/_auth/sign-up": {
      "filePath": "(authentication)/_auth.sign-up.tsx",
      "parent": "/(authentication)/_auth"
    },
    "/(authentication)/_authed/protected": {
      "filePath": "(authentication)/_authed.protected.tsx",
      "parent": "/(authentication)/_authed"
    },
    "/(authentication)/_authed/protected-admin": {
      "filePath": "(authentication)/_authed.protected-admin.tsx",
      "parent": "/(authentication)/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
