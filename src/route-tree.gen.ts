/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/root'
import { Route as appprotecteduserlayoutImport } from './routes/app/protected/user/_layout'
import { Route as appprotectedadminlayoutImport } from './routes/app/protected/admin/_layout'
import { Route as appauthlayoutImport } from './routes/app/auth/_layout'
import { Route as appindexImport } from './routes/app/_index'
import { Route as appauthsignUpImport } from './routes/app/auth/sign-up'
import { Route as appauthsignInImport } from './routes/app/auth/sign-in'
import { Route as appprotecteduserprofileImport } from './routes/app/protected/user/profile'
import { Route as appprotecteduseraccountSettingsImport } from './routes/app/protected/user/account-settings'
import { Route as appprotectedadminuserManagementImport } from './routes/app/protected/admin/user-management'
import { Route as appprotectedadmindashboardImport } from './routes/app/protected/admin/dashboard'

// Create/Update Routes

const appprotecteduserlayoutRoute = appprotecteduserlayoutImport.update({
  id: '/_protected-user',
  getParentRoute: () => rootRoute,
} as any)

const appprotectedadminlayoutRoute = appprotectedadminlayoutImport.update({
  id: '/_protected-admin',
  getParentRoute: () => rootRoute,
} as any)

const appauthlayoutRoute = appauthlayoutImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const appindexRoute = appindexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const appauthsignUpRoute = appauthsignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => appauthlayoutRoute,
} as any)

const appauthsignInRoute = appauthsignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => appauthlayoutRoute,
} as any)

const appprotecteduserprofileRoute = appprotecteduserprofileImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => appprotecteduserlayoutRoute,
} as any)

const appprotecteduseraccountSettingsRoute =
  appprotecteduseraccountSettingsImport.update({
    id: '/user/account-settings',
    path: '/user/account-settings',
    getParentRoute: () => appprotecteduserlayoutRoute,
  } as any)

const appprotectedadminuserManagementRoute =
  appprotectedadminuserManagementImport.update({
    id: '/admin/user-management',
    path: '/admin/user-management',
    getParentRoute: () => appprotectedadminlayoutRoute,
  } as any)

const appprotectedadmindashboardRoute = appprotectedadmindashboardImport.update(
  {
    id: '/admin/dashboard',
    path: '/admin/dashboard',
    getParentRoute: () => appprotectedadminlayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appindexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appauthlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_protected-admin': {
      id: '/_protected-admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appprotectedadminlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_protected-user': {
      id: '/_protected-user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appprotecteduserlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof appauthsignInImport
      parentRoute: typeof appauthlayoutImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof appauthsignUpImport
      parentRoute: typeof appauthlayoutImport
    }
    '/_protected-admin/admin/dashboard': {
      id: '/_protected-admin/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof appprotectedadmindashboardImport
      parentRoute: typeof appprotectedadminlayoutImport
    }
    '/_protected-admin/admin/user-management': {
      id: '/_protected-admin/admin/user-management'
      path: '/admin/user-management'
      fullPath: '/admin/user-management'
      preLoaderRoute: typeof appprotectedadminuserManagementImport
      parentRoute: typeof appprotectedadminlayoutImport
    }
    '/_protected-user/user/account-settings': {
      id: '/_protected-user/user/account-settings'
      path: '/user/account-settings'
      fullPath: '/user/account-settings'
      preLoaderRoute: typeof appprotecteduseraccountSettingsImport
      parentRoute: typeof appprotecteduserlayoutImport
    }
    '/_protected-user/user/profile': {
      id: '/_protected-user/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof appprotecteduserprofileImport
      parentRoute: typeof appprotecteduserlayoutImport
    }
  }
}

// Create and export the route tree

interface appauthlayoutRouteChildren {
  appauthsignInRoute: typeof appauthsignInRoute
  appauthsignUpRoute: typeof appauthsignUpRoute
}

const appauthlayoutRouteChildren: appauthlayoutRouteChildren = {
  appauthsignInRoute: appauthsignInRoute,
  appauthsignUpRoute: appauthsignUpRoute,
}

const appauthlayoutRouteWithChildren = appauthlayoutRoute._addFileChildren(
  appauthlayoutRouteChildren,
)

interface appprotectedadminlayoutRouteChildren {
  appprotectedadmindashboardRoute: typeof appprotectedadmindashboardRoute
  appprotectedadminuserManagementRoute: typeof appprotectedadminuserManagementRoute
}

const appprotectedadminlayoutRouteChildren: appprotectedadminlayoutRouteChildren =
  {
    appprotectedadmindashboardRoute: appprotectedadmindashboardRoute,
    appprotectedadminuserManagementRoute: appprotectedadminuserManagementRoute,
  }

const appprotectedadminlayoutRouteWithChildren =
  appprotectedadminlayoutRoute._addFileChildren(
    appprotectedadminlayoutRouteChildren,
  )

interface appprotecteduserlayoutRouteChildren {
  appprotecteduseraccountSettingsRoute: typeof appprotecteduseraccountSettingsRoute
  appprotecteduserprofileRoute: typeof appprotecteduserprofileRoute
}

const appprotecteduserlayoutRouteChildren: appprotecteduserlayoutRouteChildren =
  {
    appprotecteduseraccountSettingsRoute: appprotecteduseraccountSettingsRoute,
    appprotecteduserprofileRoute: appprotecteduserprofileRoute,
  }

const appprotecteduserlayoutRouteWithChildren =
  appprotecteduserlayoutRoute._addFileChildren(
    appprotecteduserlayoutRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof appindexRoute
  '': typeof appprotecteduserlayoutRouteWithChildren
  '/sign-in': typeof appauthsignInRoute
  '/sign-up': typeof appauthsignUpRoute
  '/admin/dashboard': typeof appprotectedadmindashboardRoute
  '/admin/user-management': typeof appprotectedadminuserManagementRoute
  '/user/account-settings': typeof appprotecteduseraccountSettingsRoute
  '/user/profile': typeof appprotecteduserprofileRoute
}

export interface FileRoutesByTo {
  '/': typeof appindexRoute
  '': typeof appprotecteduserlayoutRouteWithChildren
  '/sign-in': typeof appauthsignInRoute
  '/sign-up': typeof appauthsignUpRoute
  '/admin/dashboard': typeof appprotectedadmindashboardRoute
  '/admin/user-management': typeof appprotectedadminuserManagementRoute
  '/user/account-settings': typeof appprotecteduseraccountSettingsRoute
  '/user/profile': typeof appprotecteduserprofileRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof appindexRoute
  '/_auth': typeof appauthlayoutRouteWithChildren
  '/_protected-admin': typeof appprotectedadminlayoutRouteWithChildren
  '/_protected-user': typeof appprotecteduserlayoutRouteWithChildren
  '/_auth/sign-in': typeof appauthsignInRoute
  '/_auth/sign-up': typeof appauthsignUpRoute
  '/_protected-admin/admin/dashboard': typeof appprotectedadmindashboardRoute
  '/_protected-admin/admin/user-management': typeof appprotectedadminuserManagementRoute
  '/_protected-user/user/account-settings': typeof appprotecteduseraccountSettingsRoute
  '/_protected-user/user/profile': typeof appprotecteduserprofileRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/admin/dashboard'
    | '/admin/user-management'
    | '/user/account-settings'
    | '/user/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/admin/dashboard'
    | '/admin/user-management'
    | '/user/account-settings'
    | '/user/profile'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_protected-admin'
    | '/_protected-user'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_protected-admin/admin/dashboard'
    | '/_protected-admin/admin/user-management'
    | '/_protected-user/user/account-settings'
    | '/_protected-user/user/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appindexRoute: typeof appindexRoute
  appauthlayoutRoute: typeof appauthlayoutRouteWithChildren
  appprotectedadminlayoutRoute: typeof appprotectedadminlayoutRouteWithChildren
  appprotecteduserlayoutRoute: typeof appprotecteduserlayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  appindexRoute: appindexRoute,
  appauthlayoutRoute: appauthlayoutRouteWithChildren,
  appprotectedadminlayoutRoute: appprotectedadminlayoutRouteWithChildren,
  appprotecteduserlayoutRoute: appprotecteduserlayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_protected-admin",
        "/_protected-user"
      ]
    },
    "/": {
      "filePath": "app\\_index.tsx"
    },
    "/_auth": {
      "filePath": "app\\auth\\_layout.tsx",
      "children": [
        "/_auth/sign-in",
        "/_auth/sign-up"
      ]
    },
    "/_protected-admin": {
      "filePath": "app\\protected\\admin\\_layout.tsx",
      "children": [
        "/_protected-admin/admin/dashboard",
        "/_protected-admin/admin/user-management"
      ]
    },
    "/_protected-user": {
      "filePath": "app\\protected\\user\\_layout.tsx",
      "children": [
        "/_protected-user/user/account-settings",
        "/_protected-user/user/profile"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "app\\auth\\sign-in.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "app\\auth\\sign-up.tsx",
      "parent": "/_auth"
    },
    "/_protected-admin/admin/dashboard": {
      "filePath": "app\\protected\\admin\\dashboard.tsx",
      "parent": "/_protected-admin"
    },
    "/_protected-admin/admin/user-management": {
      "filePath": "app\\protected\\admin\\user-management.tsx",
      "parent": "/_protected-admin"
    },
    "/_protected-user/user/account-settings": {
      "filePath": "app\\protected\\user\\account-settings.tsx",
      "parent": "/_protected-user"
    },
    "/_protected-user/user/profile": {
      "filePath": "app\\protected\\user\\profile.tsx",
      "parent": "/_protected-user"
    }
  }
}
ROUTE_MANIFEST_END */
