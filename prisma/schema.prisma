// pnpm dlx @better-auth/cli generate --config src/libs/auth.ts
// https://www.better-auth.com/docs/concepts/database#core-schema
// https://www.better-auth.com/docs/plugins/username#schema
// https://www.better-auth.com/docs/plugins/admin#schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Better Auth
model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  username      String?
  role          String?
  banned        Boolean?
  banReason     String?
  banExpires    DateTime?
  Session       Session[]
  Account       Account[]

  @@unique([email])
  @@unique([username])
  @@map("user")
}

// Better Auth
model Session {
  id             String   @id
  expiresAt      DateTime
  ipAddress      String?
  userAgent      String?
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  impersonatedBy String?

  @@map("session")
}

// Better Auth
model Account {
  id           String    @id
  accountId    String
  providerId   String
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String?
  refreshToken String?
  idToken      String?
  expiresAt    DateTime?
  password     String?

  @@map("account")
}

// Better Auth
model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?

  @@map("verification")
}
